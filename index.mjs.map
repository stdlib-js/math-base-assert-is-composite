{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrime = require( '@stdlib/math-base-assert-is-prime' );\nvar isInteger = require( '@stdlib/math-base-assert-is-integer' );\nvar PINF = require( '@stdlib/constants-float64-pinf' );\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating whether a number is a composite.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether a value is a composite number\n*\n* @example\n* var bool = isComposite( 4.0 );\n* // returns true\n*\n* @example\n* var bool = isComposite( 5.0 );\n* // returns false\n*/\nfunction isComposite( x ) {\n\treturn isInteger( x ) && ( x > 1 ) && x !== PINF && isPrime( x ) === false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isComposite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a number is composite.\n*\n* @module @stdlib/math-base-assert-is-composite\n*\n* @example\n* var isComposite = require( '@stdlib/math-base-assert-is-composite' );\n*\n* var bool = isComposite( 10.0 );\n* // returns true\n*\n* bool = isComposite( 11.0 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isComposite = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isComposite;\n"],"names":["isPrime","require$$0","isInteger","require$$1","PINF","require$$2","lib","x"],"mappings":";;sRAsBA,IAAIA,EAAUC,EACVC,EAAYC,EACZC,EAAOC,EA0BX,ICRAC,EDCA,SAAsBC,GACrB,OAAOL,EAAWK,IAASA,EAAI,GAAOA,IAAMH,IAAyB,IAAjBJ,EAASO"}